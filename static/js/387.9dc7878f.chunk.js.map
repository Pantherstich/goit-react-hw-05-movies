{"version":3,"file":"static/js/387.9dc7878f.chunk.js","mappings":"mMAEO,MAAMA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAEhBC,EAASH,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,QACJF,EAAAA,GAAAA,EAAQK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,Q,+BCAlC,MAgCA,EAhCgBI,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,OACbC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IAY/C,OAVAC,EAAAA,EAAAA,YAAU,KACJL,IACFM,EAAAA,EAAAA,IAAYN,GAASO,MAAKC,IACpBA,EAAOC,SAAWD,EAAOC,QAAQC,OAAS,GAC5CP,EAAeK,EAAOC,QACxB,GAEJ,GACC,CAACT,KAGFW,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGV,EAAYQ,OAAS,EACpBR,EAAYW,KAAIC,IACdC,EAAAA,EAAAA,MAACvB,EAAI,CAAAoB,SAAA,EACHG,EAAAA,EAAAA,MAACnB,EAAM,CAAAgB,SAAA,CAAC,WAASE,EAAME,WACvBL,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAMG,YAFDH,EAAMI,OAMnBP,EAAAA,EAAAA,KAACnB,EAAI,CAAAoB,SAAkB,2BAAb,iBAGV,C,kFChCV,MAAMO,EAAU,mCACVC,EAAW,+BAEVC,eAAeC,IACpB,IAIE,aAHqBC,EAAAA,EAAAA,IAAU,GAADC,OACzBJ,EAAQ,8BAAAI,OAA6BL,EAAO,qBAEnCM,IAGhB,CAFE,MAAOC,GACP,MAAMA,CACR,CACF,CAEOL,eAAeM,EAAYC,GAChC,IAIE,aAHqBL,EAAAA,EAAAA,IAAU,GAADC,OACzBJ,EAAQ,wBAAAI,OAAuBI,EAAK,iCAAAJ,OAAgCL,EAAO,4BAElEM,IAGhB,CAFE,MAAOC,GACP,MAAMA,CACR,CACF,CAEOL,eAAeQ,EAAkBX,GACtC,IAIE,aAHqBK,EAAAA,EAAAA,IAAU,GAADC,OACzBJ,EAAQ,WAAAI,OAAUN,EAAE,aAAAM,OAAYL,EAAO,qBAE9BM,IAGhB,CAFE,MAAOC,GACP,MAAMA,CACR,CACF,CAEOL,eAAeS,EAAUZ,GAC9B,IAIE,aAHqBK,EAAAA,EAAAA,IAAU,GAADC,OACzBJ,EAAQ,WAAAI,OAAUN,EAAE,qBAAAM,OAAoBL,EAAO,qBAEtCM,IAGhB,CAFE,MAAOC,GACP,MAAMA,CACR,CACF,CAEOL,eAAef,EAAYY,GAChC,IAIE,aAHqBK,EAAAA,EAAAA,IAAU,GAADC,OACzBJ,EAAQ,WAAAI,OAAUN,EAAE,qBAAAM,OAAoBL,EAAO,4BAEtCM,IAGhB,CAFE,MAAOC,GACP,MAAMA,CACR,CACF,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li``;\n\nexport const Author = styled.p``;\nexport const ReviewText = styled.p``;\n","import { useParams } from 'react-router-dom';\nimport { Author, Item } from './Reviews.styled';\nimport { useEffect, useState } from 'react';\nimport { fetchReview } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReview, setMovieReview] = useState([]);\n\n  useEffect(() => {\n    if (movieId) {\n      fetchReview(movieId).then(movies => {\n        if (movies.results && movies.results.length > 0) {\n          setMovieReview(movies.results);\n        }\n      });\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {movieReview.length > 0 ? (\n          movieReview.map(movie => (\n            <Item key={movie.id}>\n              <Author>Author: {movie.author}</Author>\n              <p>{movie.content}</p>\n            </Item>\n          ))\n        ) : (\n          <Item key=\"no-reviews\">There is no review yet </Item>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst api_key = '4ee590f8afe314c87c8a374d8548e25b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrend() {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/trending/all/day?api_key=${api_key}&language=en-US`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchSearch(value) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/search/movie?query=${value}&include_adult=false&api_key=${api_key}&language=en-US&page=1`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${api_key}&language=en-US`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchCast(id) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${api_key}&language=en-US`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchReview(id) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${api_key}&language=en-US&page=1`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["Item","styled","_templateObject","_taggedTemplateLiteral","Author","_templateObject2","_templateObject3","Reviews","movieId","useParams","movieReview","setMovieReview","useState","useEffect","fetchReview","then","movies","results","length","_jsx","children","map","movie","_jsxs","author","content","id","api_key","BASE_URL","async","fetchTrend","axios","concat","data","error","fetchSearch","value","fetchMovieDetails","fetchCast"],"sourceRoot":""}