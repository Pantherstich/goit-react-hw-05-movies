{"version":3,"file":"static/js/485.ca3c0136.chunk.js","mappings":"6KAEO,MAAMA,EAAYC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uFAMrBC,EAAYH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qcAoBrBG,EAAWL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qH,8BCzBlC,MA+BA,EA/BmBK,IAAiB,IAAhB,OAAEC,GAAQD,EAC5B,MAAME,GAAWC,EAAAA,EAAAA,MAKjB,OACEC,EAAAA,EAAAA,MAACZ,EAAS,CAAAa,SAAA,CACPJ,EAAOK,KAAIC,IAIVC,EAAAA,EAAAA,KAACZ,EAAS,CAAAS,UACRD,EAAAA,EAAAA,MAACK,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaJ,EAAMK,IAAqBC,MAAOX,EAASG,SAAA,EAC9DG,EAAAA,EAAAA,KAACV,EAAQ,CACPgB,IACEP,EAAMQ,YAAW,GAAAJ,OAdf,mCAeYA,OAAGJ,EAAMQ,aAbnC,0EAiBSP,EAAAA,EAAAA,KAAA,KAAAH,SAAIE,EAAMS,UAAcR,EAAAA,EAAAA,KAAA,KAAAH,SAAIE,EAAMU,SARCV,EAAMK,KAD9BL,EAAMK,MAcL,IAAlBX,EAAOiB,SAAgBV,EAAAA,EAAAA,KAAA,KAAAH,SAAG,oBACjB,C,6DC5BT,MAAMc,E,OAAY1B,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yD,wCCGlC,MAuBA,EAvBayB,KACX,MAAOnB,EAAQoB,IAAaC,EAAAA,EAAAA,UAAS,IAerC,OAbAC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,MACGC,MAAKxB,IACCA,EAAOyB,QAAQR,OAMpBG,EAAUpB,EAAOyB,SALfC,QAAQC,IAAI,uCAKW,IAE1BC,OAAM,IAAMF,QAAQC,IAAI,yCAAwC,GAClE,KAEDxB,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACEG,EAAAA,EAAAA,KAACW,EAAS,CAAAd,SAAC,oBACXG,EAAAA,EAAAA,KAAChB,EAAAA,EAAS,CAACS,OAAQA,MACd,C,kFCxBX6B,EAAAA,EAAAA,SAAAA,OAAwB,CAAEC,QAAS,oCACnCD,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,MAAME,EAAYC,eAAOC,GAAgC,IAAtBC,EAAWC,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAME,QAAiBR,EAAAA,EAAAA,IAAUI,EAAU,CAAEK,OAAQJ,IACrD,OAAOG,EAASE,IAClB,EAEahB,EAAaS,eAEXD,EADI,sBAaNS,EAAcR,eAEZD,EADC,eACmB,CAAEU,UAaxBC,EAAoBV,UAC/B,MAAMC,EAAQ,SAAAvB,OAAYiC,GAC1B,aAAaZ,EAAUE,EAAS,EAYrBW,EAAYZ,UACvB,MAAMC,EAAQ,SAAAvB,OAAYiC,EAAO,YACjC,aAAaZ,EAAUE,EAAS,EAYrBY,EAAcb,UACzB,MAAMC,EAAQ,SAAAvB,OAAYiC,EAAO,YACjC,aAAaZ,EAAUE,EAAS,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  justify-self: center;\n  display: flex;\n  gap: 16px;\n  flex-wrap: wrap;\n`;\nexport const MovieItem = styled.li`\n  border-radius: 20px;\n  overflow: hidden;\n  padding-bottom: 8px;\n  /* padding: 4px; */\n  list-style-type: none;\n  width: 19%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  box-shadow: 0px 0px 8px 0px rgba(0, 0, 0, 0.85);\n\n  transition: transform 300ms ease-in-out;\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.85);\n    transform: scale(1.05);\n  }\n`;\nexport const MovieImg = styled.img`\n  /* object-fit: contain; */\n\n  padding: 0;\n  margin: 0;\n  width: 100%;\n  /* border-radius: 16px; */\n`;\n","import { MovieList, MovieItem, MovieImg } from './MoviesList.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const baseUrl = 'https://image.tmdb.org/t/p/w300';\n  const defaultImg =\n    'https://cdn.pixabay.com/photo/2018/11/03/15/51/here-3792307_1280.png';\n\n  return (\n    <MovieList>\n      {movies.map(movie => (\n        // const name = movie.name ?? movie.title;\n\n        // return (\n        <MovieItem key={movie.id}>\n          <Link to={`/movies/${movie.id}`} key={movie.id} state={location}>\n            <MovieImg\n              src={\n                movie.poster_path\n                  ? `${baseUrl}${movie.poster_path}`\n                  : defaultImg\n              }\n            ></MovieImg>\n            {<p>{movie.title}</p> || <p>{movie.name}</p>}\n          </Link>\n        </MovieItem>\n        // );\n      ))}\n      {movies.length === 0 && <p>Nothing found</p>}\n    </MovieList>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n`;\n","import { PageTitle } from './Home.styled';\nimport MovieList from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { fetchTrend } from 'services/api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrend()\n      .then(movies => {\n        if (!movies.results.length) {\n          console.log('sorry, something go wrong, try later');\n          return;\n        }\n\n        // if (movies.results.length > 0) {\n        setMovies(movies.results);\n      })\n      .catch(() => console.log('sorry, something go wrong, try later'));\n  }, []);\n  return (\n    <main>\n      <PageTitle>Popular today:</PageTitle>\n      <MovieList movies={movies}></MovieList>\n    </main>\n  );\n};\nexport default Home;\n","import axios from 'axios';\naxios.defaults.params = { api_key: '4ee590f8afe314c87c8a374d8548e25b' };\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async (endpoint, queryParams = {}) => {\n  const response = await axios.get(endpoint, { params: queryParams });\n  return response.data;\n};\n\nexport const fetchTrend = async () => {\n  const endpoint = 'trending/movie/day';\n  return await getMovies(endpoint);\n};\n// export async function fetchTrend() {\n//   try {\n//     const result = await axios.get(\n//       `${BASE_URL}/trending/all/day?api_key=${api_key}&language=en-US`\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\nexport const fetchSearch = async query => {\n  const endpoint = `search/movie`;\n  return await getMovies(endpoint, { query });\n};\n\n// export async function fetchSearch(value) {\n//   try {\n//     const result = await axios.get(\n//       `${BASE_URL}/search/movie?query=${value}&include_adult=false&api_key=${api_key}&language=en-US&page=1`\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\nexport const fetchMovieDetails = async movieId => {\n  const endpoint = `movie/${movieId}`;\n  return await getMovies(endpoint);\n};\n// export async function fetchMovieDetails(id) {\n//   try {\n//     const result = await axios.get(\n//       `${BASE_URL}/movie/${id}?api_key=${api_key}&language=en-US`\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\nexport const fetchCast = async movieId => {\n  const endpoint = `movie/${movieId}/credits`;\n  return await getMovies(endpoint);\n};\n// export async function fetchCast(id) {\n//   try {\n//     const result = await axios.get(\n//       `${BASE_URL}/movie/${id}/credits?api_key=${api_key}&language=en-US`\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\nexport const fetchReview = async movieId => {\n  const endpoint = `movie/${movieId}/reviews`;\n  return await getMovies(endpoint);\n};\n// export async function fetchReview(id) {\n//   try {\n//     const result = await axios.get(\n//       `${BASE_URL}/movie/${id}/reviews?api_key=${api_key}&language=en-US&page=1`\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\n"],"names":["MovieList","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MovieImg","_templateObject3","_ref","movies","location","useLocation","_jsxs","children","map","movie","_jsx","Link","to","concat","id","state","src","poster_path","title","name","length","PageTitle","Home","setMovies","useState","useEffect","fetchTrend","then","results","console","log","catch","axios","api_key","getMovies","async","endpoint","queryParams","arguments","undefined","response","params","data","fetchSearch","query","fetchMovieDetails","movieId","fetchCast","fetchReview"],"sourceRoot":""}