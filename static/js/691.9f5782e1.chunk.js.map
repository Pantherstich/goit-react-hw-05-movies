{"version":3,"file":"static/js/691.9f5782e1.chunk.js","mappings":"6KAEO,MAAMA,EAAYC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uFAMrBC,EAAYH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kZAkBrBG,EAAWL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wF,8BCvBlC,MAgCA,EAhCmBK,IAAiB,IAAhB,OAAEC,GAAQD,EAC5B,MAAME,GAAWC,EAAAA,EAAAA,MAKjB,OACEC,EAAAA,EAAAA,KAACZ,EAAS,CAAAa,SACPJ,EAAOK,KAAIC,IAAU,IAADC,EACnB,MAAMC,EAAiB,QAAbD,EAAGD,EAAME,YAAI,IAAAD,EAAAA,EAAID,EAAMG,MAEjC,OACEC,EAAAA,EAAAA,MAACf,EAAS,CAAAS,SAAA,EACRD,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaP,EAAMQ,IAAqBC,MAAOd,EAASG,UAC9DD,EAAAA,EAAAA,KAAAa,EAAAA,SAAA,CAAAZ,UACED,EAAAA,EAAAA,KAACN,EAAQ,CACPoB,IACEX,EAAMY,YAAW,GAAAL,OAfnB,mCAgBgBA,OAAGP,EAAMY,aAdvC,4EAS8CZ,EAAMQ,IAW3CN,EAAM,MAZOF,EAAMQ,GAaV,KAGN,C,0EC7BT,MAAMK,EAAa3B,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2NAWxB0B,EAAkB5B,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oPAe9B2B,EAAY7B,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gb,yDCrBtC,MAgDA,EAhDe4B,KACb,MAAOtB,EAAQuB,IAAaC,EAAAA,EAAAA,UAAS,KAC/B,QAAEC,IAAYC,EAAAA,EAAAA,OACbC,EAAcC,IAAmBC,EAAAA,EAAAA,MAClCC,EAAQH,EAAaI,IAAI,UAAY,IACpCC,EAAYC,IAAiBT,EAAAA,EAAAA,UAAS,IA2B7C,OAdAU,EAAAA,EAAAA,YAAU,KACY,GACnB,CAACT,KAEJS,EAAAA,EAAAA,YAAU,KACJJ,IACFK,EAAAA,EAAAA,IAAYL,GAAOM,MAAKpC,IAClBA,EAAOqC,QAAQC,OAAS,GAC1Bf,EAAUvB,EAAOqC,QACnB,GAEJ,GACC,CAACP,KAGFpB,EAAAA,EAAAA,MAAA,QAAAN,SAAA,EACEM,EAAAA,EAAAA,MAACS,EAAU,CAACoB,SA5BKC,IACnBA,EAAEC,iBACFb,EAAgB,CAAEE,MAAOE,IACrBA,EAAWU,MAEf,EAuBqCtC,SAAA,EACjCD,EAAAA,EAAAA,KAACiB,EAAe,CACduB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,MAAOd,EACPe,SA1BaP,IACnBP,EAAcO,EAAEQ,cAAcF,MAAM,KA2BhC3C,EAAAA,EAAAA,KAACkB,EAAS,CAACsB,KAAK,SAAQvC,SAAC,eAE3BD,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CAACjD,OAAQA,MACf,C,kFCnDX,MAAMkD,EAAU,mCACVC,EAAW,+BAEVC,eAAeC,IACpB,IAIE,aAHqBC,EAAAA,EAAAA,IAAU,GAADzC,OACzBsC,EAAQ,8BAAAtC,OAA6BqC,EAAO,qBAEnCK,IAGhB,CAFE,MAAOC,GACP,MAAMA,CACR,CACF,CAEOJ,eAAejB,EAAYW,GAChC,IAIE,aAHqBQ,EAAAA,EAAAA,IAAU,GAADzC,OACzBsC,EAAQ,wBAAAtC,OAAuBiC,EAAK,iCAAAjC,OAAgCqC,EAAO,4BAElEK,IAGhB,CAFE,MAAOC,GACP,MAAMA,CACR,CACF,CAEOJ,eAAeK,EAAkB3C,GACtC,IAIE,aAHqBwC,EAAAA,EAAAA,IAAU,GAADzC,OACzBsC,EAAQ,WAAAtC,OAAUC,EAAE,aAAAD,OAAYqC,EAAO,qBAE9BK,IAGhB,CAFE,MAAOC,GACP,MAAMA,CACR,CACF,CAEOJ,eAAeM,EAAU5C,GAC9B,IAIE,aAHqBwC,EAAAA,EAAAA,IAAU,GAADzC,OACzBsC,EAAQ,WAAAtC,OAAUC,EAAE,qBAAAD,OAAoBqC,EAAO,qBAEtCK,IAGhB,CAFE,MAAOC,GACP,MAAMA,CACR,CACF,CAEOJ,eAAeO,EAAY7C,GAChC,IAIE,aAHqBwC,EAAAA,EAAAA,IAAU,GAADzC,OACzBsC,EAAQ,WAAAtC,OAAUC,EAAE,qBAAAD,OAAoBqC,EAAO,4BAEtCK,IAGhB,CAFE,MAAOC,GACP,MAAMA,CACR,CACF,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  justify-self: center;\n  display: flex;\n  gap: 16px;\n  flex-wrap: wrap;\n`;\nexport const MovieItem = styled.li`\n  border-radius: 20px;\n  padding: 4px;\n  list-style-type: none;\n  width: 15%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  box-shadow: 0px 0px 8px 0px rgba(0, 0, 0, 0.85);\n\n  transition: transform 300ms ease-in-out;\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.85);\n    transform: scale(1.05);\n  }\n`;\nexport const MovieImg = styled.img`\n  padding: 0;\n  margin: 0;\n  width: 100%;\n  border-radius: 16px 16px 0 0;\n`;\n","import { MovieList, MovieItem, MovieImg } from './MoviesList.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const baseUrl = 'https://image.tmdb.org/t/p/w300';\n  const defaultImg =\n    'https://cdn.pixabay.com/photo/2018/11/03/15/51/here-3792307_1280.png';\n\n  return (\n    <MovieList>\n      {movies.map(movie => {\n        const name = movie.name ?? movie.title;\n\n        return (\n          <MovieItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`} key={movie.id} state={location}>\n              <>\n                <MovieImg\n                  src={\n                    movie.poster_path\n                      ? `${baseUrl}${movie.poster_path}`\n                      : defaultImg\n                  }\n                ></MovieImg>\n              </>\n            </Link>\n            {name}{' '}\n          </MovieItem>\n        );\n      })}\n    </MovieList>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  margin: 0 auto 24px auto;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: 1px solid #000000;\n  border-radius: 8px;\n  overflow: hidden;\n`;\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &:placeholder {\n    /* font: inherit; */\n    font-size: 18px;\n  }\n`;\nexport const SearchBtn = styled.button`\n  display: inline-block;\n  padding: 8px 40px;\n  font-size: 18px;\n  border: none;\n  /* width: 48px; */\n  /* height: 48px; */\n  border-left: 1px solid #000000;\n  /* opacity: 0.6; */\n  cursor: pointer;\n  /* outline: none; */\n  background-color: #e3a300d3;\n  color: #000000;\n  &:hover {\n    color: #e3a300d3;\n    background-color: #000000;\n  }\n  &:disabled {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n`;\n","import { SearchForm, SearchFormInput, SearchBtn } from './Movies.styled';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport { fetchSearch } from 'services/api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const { movieId } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const [inputValue, setInputValue] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: inputValue });\n    if (inputValue.trim() === '') {\n      return;\n    }\n  };\n\n  const handleChange = e => {\n    setInputValue(e.currentTarget.value);\n  };\n\n  useEffect(() => {\n    if (!movieId) return;\n  }, [movieId]);\n\n  useEffect(() => {\n    if (query) {\n      fetchSearch(query).then(movies => {\n        if (movies.results.length > 0) {\n          setMovies(movies.results);\n        }\n      });\n    }\n  }, [query]);\n\n  return (\n    <main>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          value={inputValue}\n          onChange={handleChange}\n        ></SearchFormInput>\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </SearchForm>\n      <MoviesList movies={movies}></MoviesList>\n    </main>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\nconst api_key = '4ee590f8afe314c87c8a374d8548e25b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrend() {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/trending/all/day?api_key=${api_key}&language=en-US`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchSearch(value) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/search/movie?query=${value}&include_adult=false&api_key=${api_key}&language=en-US&page=1`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${api_key}&language=en-US`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchCast(id) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${api_key}&language=en-US`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchReview(id) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${api_key}&language=en-US&page=1`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["MovieList","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MovieImg","_templateObject3","_ref","movies","location","useLocation","_jsx","children","map","movie","_movie$name","name","title","_jsxs","Link","to","concat","id","state","_Fragment","src","poster_path","SearchForm","SearchFormInput","SearchBtn","Movies","setMovies","useState","movieId","useParams","searchParams","setSearchParams","useSearchParams","query","get","inputValue","setInputValue","useEffect","fetchSearch","then","results","length","onSubmit","e","preventDefault","trim","type","autoComplete","autoFocus","value","onChange","currentTarget","MoviesList","api_key","BASE_URL","async","fetchTrend","axios","data","error","fetchMovieDetails","fetchCast","fetchReview"],"sourceRoot":""}