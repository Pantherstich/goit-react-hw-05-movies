{"version":3,"file":"static/js/736.44ea574d.chunk.js","mappings":"gMACO,MAAMA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0FAMhBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gGAMhBG,EAAQL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uEAKlBK,EAAOP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uDAIfO,EAAOT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,iCAGfS,EAAiBX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,yF,wCCpBxC,MA6CA,EAzCaW,KACX,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,OACbC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,IAY3C,OAVAC,EAAAA,EAAAA,YAAU,KACJL,IACFM,EAAAA,EAAAA,GAAUN,GAASO,MAAKC,IAClBA,EAAOC,KAAKC,OAAS,GACvBP,EAAaK,EAAOC,KACtB,GAEJ,GACC,CAACT,KAGFW,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAC1B,EAAI,CAAA2B,SACFV,EAAUW,KAAIC,IAEXC,EAAAA,EAAAA,MAAC1B,EAAI,CAAAuB,SAAA,EACHD,EAAAA,EAAAA,KAACd,EAAc,CAAAe,UACbD,EAAAA,EAAAA,KAACpB,EAAK,CACJyB,IACEF,EAAMG,aAAY,GAAAC,OA3BtB,mCA4BkBA,OAAGJ,EAAMG,cA1BzC,uEA6BgBE,IAAI,QAIRR,EAAAA,EAAAA,KAAClB,EAAI,CAAAmB,SAAEE,EAAMM,QACbL,EAAAA,EAAAA,MAACpB,EAAI,CAAAiB,SAAA,CAAC,cAAYE,EAAMO,eAbfP,EAAMQ,SAkBnB,C,kFC7CVC,EAAAA,EAAAA,SAAAA,OAAwB,CAAEC,QAAS,oCACnCD,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,MAAME,EAAYC,eAAOC,GAAgC,IAAtBC,EAAWC,UAAAnB,OAAA,QAAAoB,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAME,QAAiBR,EAAAA,EAAAA,IAAUI,EAAU,CAAEK,OAAQJ,IACrD,OAAOG,EAASE,IAClB,EAEaC,EAAaR,eAEXD,EADI,sBAaNU,EAAcT,eAEZD,EADC,eACmB,CAAEW,UAaxBC,EAAoBX,UAC/B,MAAMC,EAAQ,SAAAT,OAAYlB,GAC1B,aAAayB,EAAUE,EAAS,EAYrBrB,EAAYoB,UACvB,MAAMC,EAAQ,SAAAT,OAAYlB,EAAO,YACjC,aAAayB,EAAUE,EAAS,EAYrBW,EAAcZ,UACzB,MAAMC,EAAQ,SAAAT,OAAYlB,EAAO,YACjC,aAAayB,EAAUE,EAAS,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 16px;\n`;\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 120px;\n`;\nexport const Photo = styled.img`\n  width: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n`;\nexport const Name = styled.p`\n  text-align: center;\n  font-weight: bold;\n`;\nexport const Info = styled.p`\n  text-align: center;\n`;\nexport const PhotoContainer = styled.div`\n  width: 120px;\n  height: 160px;\n  display: flex;\n  align-content: center;\n`;\n","import { Photo, Item, List, Name, Info, PhotoContainer } from './Cast.styled';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchCast } from 'services/api';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w200';\nconst defaultImg =\n  'https://cdn.pixabay.com/photo/2018/11/03/15/51/here-3792307_1280.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    if (movieId) {\n      fetchCast(movieId).then(movies => {\n        if (movies.cast.length > 0) {\n          setMovieCast(movies.cast);\n        }\n      });\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      <List>\n        {movieCast.map(movie => {\n          return (\n            <Item key={movie.id}>\n              <PhotoContainer>\n                <Photo\n                  src={\n                    movie.profile_path\n                      ? `${baseUrl}${movie.profile_path}`\n                      : defaultImg\n                  }\n                  alt=\"\"\n                ></Photo>\n              </PhotoContainer>\n\n              <Name>{movie.name}</Name>\n              <Info>Character: {movie.character}</Info>\n            </Item>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\naxios.defaults.params = { api_key: '4ee590f8afe314c87c8a374d8548e25b' };\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async (endpoint, queryParams = {}) => {\n  const response = await axios.get(endpoint, { params: queryParams });\n  return response.data;\n};\n\nexport const fetchTrend = async () => {\n  const endpoint = 'trending/movie/day';\n  return await getMovies(endpoint);\n};\n// export async function fetchTrend() {\n//   try {\n//     const result = await axios.get(\n//       `${BASE_URL}/trending/all/day?api_key=${api_key}&language=en-US`\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\nexport const fetchSearch = async query => {\n  const endpoint = `search/movie`;\n  return await getMovies(endpoint, { query });\n};\n\n// export async function fetchSearch(value) {\n//   try {\n//     const result = await axios.get(\n//       `${BASE_URL}/search/movie?query=${value}&include_adult=false&api_key=${api_key}&language=en-US&page=1`\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\nexport const fetchMovieDetails = async movieId => {\n  const endpoint = `movie/${movieId}`;\n  return await getMovies(endpoint);\n};\n// export async function fetchMovieDetails(id) {\n//   try {\n//     const result = await axios.get(\n//       `${BASE_URL}/movie/${id}?api_key=${api_key}&language=en-US`\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\nexport const fetchCast = async movieId => {\n  const endpoint = `movie/${movieId}/credits`;\n  return await getMovies(endpoint);\n};\n// export async function fetchCast(id) {\n//   try {\n//     const result = await axios.get(\n//       `${BASE_URL}/movie/${id}/credits?api_key=${api_key}&language=en-US`\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\nexport const fetchReview = async movieId => {\n  const endpoint = `movie/${movieId}/reviews`;\n  return await getMovies(endpoint);\n};\n// export async function fetchReview(id) {\n//   try {\n//     const result = await axios.get(\n//       `${BASE_URL}/movie/${id}/reviews?api_key=${api_key}&language=en-US&page=1`\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Photo","_templateObject3","Name","_templateObject4","Info","_templateObject5","PhotoContainer","_templateObject6","Cast","movieId","useParams","movieCast","setMovieCast","useState","useEffect","fetchCast","then","movies","cast","length","_jsx","children","map","movie","_jsxs","src","profile_path","concat","alt","name","character","id","axios","api_key","getMovies","async","endpoint","queryParams","arguments","undefined","response","params","data","fetchTrend","fetchSearch","query","fetchMovieDetails","fetchReview"],"sourceRoot":""}