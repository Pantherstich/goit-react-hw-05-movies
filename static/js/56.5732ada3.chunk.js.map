{"version":3,"file":"static/js/56.5732ada3.chunk.js","mappings":"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","sources":["pages/MovieDeatails/MovieDetails.styled.jsx","pages/MovieDeatails/MovieDatails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  margin: 16px;\n  padding: 16px;\n  flex-direction: column;\n  border: 1px solid #000000;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 16px;\n`;\nexport const GoBackLink = styled(Link)`\n  display: inline-block;\n  text-decoration: underline;\n  font-size: 20px;\n  margin-bottom: 16px;\n`;\nexport const MovieImg = styled.img`\n  width: 300px;\n  border-radius: 16px;\n`;\nexport const MovieName = styled.h2`\n  font-size: 30px;\n`;\nexport const OverviewText = styled.p`\n  font-size: 18px;\n  padding-right: 20px;\n`;\nexport const Genres = styled.h3`\n  font-weight: bold;\n`;\nexport const GenresText = styled.p`\n  font-size: 18px;\n`;\nexport const GenresStyles = styled.div`\n  display: flex;\n  gap: 8px;\n`;\nexport const AdInfo = styled.p``;\nexport const NavList = styled.ul`\n  display: flex;\n  gap: 60px;\n  align-items: center;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n  margin-right: 20px;\n`;\nexport const Movie = styled.div`\n  display: flex;\n`;\nexport const AdditionalNav = styled.div`\n  display: flex;\n  gap: 80px;\n  align-items: center;\n  margin-bottom: 24px;\n`;\nexport const NavLinkStyled = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-size: 20px;\n\n  &.active {\n    text-decoration: underline;\n  }\n`;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Suspense, useRef } from 'react';\nimport {\n  MovieContainer,\n  MovieImg,\n  MovieName,\n  AdditionalNav,\n  NavLinkStyled,\n  OverviewText,\n  GenresText,\n  GoBackLink,\n  NavList,\n  Movie,\n  MovieInfo,\n  GenresStyles,\n} from './MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { fetchMovieDetails } from 'services/api';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (movieId) {\n          const fetchedMovie = await fetchMovieDetails(movieId);\n          const releaseYear = new Date(fetchedMovie.release_date).getFullYear();\n          const percentage = (fetchedMovie.vote_average / 10) * 100;\n          setMovie({ ...fetchedMovie, releaseYear, percentage });\n        }\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        setMovie(null);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const defaultImg =\n    'https://cdn.pixabay.com/photo/2018/11/03/15/51/here-3792307_1280.png';\n\n  return (\n    <main>\n      {movie && (\n        <MovieContainer>\n          <GoBackLink to={backLink?.from ?? '/'}>Go back</GoBackLink>\n\n          <Movie>\n            <MovieImg\n              src={\n                movie.poster_path\n                  ? `${baseUrl}${movie.poster_path}`\n                  : defaultImg\n              }\n            ></MovieImg>\n\n            <MovieInfo>\n              <MovieName>\n                {movie.title} ({movie.releaseYear})\n              </MovieName>\n              <h3>Rating: {Math.round(movie.percentage)}%</h3>\n              <h3>Overview</h3>\n              <OverviewText>{movie.overview}</OverviewText>\n              <h3>Genres</h3>\n              <GenresStyles>\n                {movie.genres.map(genre => (\n                  <GenresText key={genre.id}>{genre.name}</GenresText>\n                ))}\n              </GenresStyles>\n            </MovieInfo>\n          </Movie>\n          <AdditionalNav>\n            <h3>Additional information</h3>\n            <NavList>\n              <li>\n                <NavLinkStyled to=\"cast\">Cast</NavLinkStyled>\n              </li>\n              <li>\n                <NavLinkStyled to=\"reviews\">Reviews</NavLinkStyled>\n              </li>\n            </NavList>\n          </AdditionalNav>\n\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </MovieContainer>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst api_key = '4ee590f8afe314c87c8a374d8548e25b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrend() {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/trending/all/day?api_key=${api_key}&language=en-US`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchSearch(value) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/search/movie?query=${value}&include_adult=false&api_key=${api_key}&language=en-US&page=1`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${api_key}&language=en-US`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchCast(id) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${api_key}&language=en-US`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchReview(id) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${api_key}&language=en-US&page=1`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["MovieContainer","styled","_templateObject","_taggedTemplateLiteral","GoBackLink","Link","_templateObject2","MovieImg","_templateObject3","MovieName","_templateObject4","OverviewText","_templateObject5","GenresText","_templateObject6","_templateObject7","GenresStyles","_templateObject8","NavList","_templateObject9","_templateObject10","MovieInfo","_templateObject11","Movie","_templateObject12","AdditionalNav","_templateObject13","NavLinkStyled","NavLink","_templateObject14","MovieDetails","_location$state$from","_location$state","_backLink$from","movieId","useParams","movie","setMovie","useState","location","useLocation","backLink","useRef","state","from","useEffect","async","fetchedMovie","fetchMovieDetails","releaseYear","Date","release_date","getFullYear","percentage","vote_average","error","console","fetchData","_jsx","children","_jsxs","to","src","poster_path","concat","title","Math","round","overview","genres","map","genre","name","id","Suspense","fallback","Loader","Outlet","api_key","BASE_URL","fetchTrend","axios","data","fetchSearch","value","fetchCast","fetchReview"],"sourceRoot":""}