{"version":3,"file":"static/js/387.9efb685c.chunk.js","mappings":"mMAEO,MAAMA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAEhBC,EAASH,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,QACJF,EAAAA,GAAAA,EAAQK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,Q,+BCAlC,MAgCA,EAhCgBI,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,OACbC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IAY/C,OAVAC,EAAAA,EAAAA,YAAU,KACJL,IACFM,EAAAA,EAAAA,IAAYN,GAASO,MAAKC,IACpBA,EAAOC,SAAWD,EAAOC,QAAQC,OAAS,GAC5CP,EAAeK,EAAOC,QACxB,GAEJ,GACC,CAACT,KAGFW,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGV,EAAYQ,OAAS,EACpBR,EAAYW,KAAIC,IACdC,EAAAA,EAAAA,MAACvB,EAAI,CAAAoB,SAAA,EACHG,EAAAA,EAAAA,MAACnB,EAAM,CAAAgB,SAAA,CAAC,WAASE,EAAME,WACvBL,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAMG,YAFDH,EAAMI,OAMnBP,EAAAA,EAAAA,KAACnB,EAAI,CAAAoB,SAAkB,2BAAb,iBAGV,C,kFChCVO,EAAAA,EAAAA,SAAAA,OAAwB,CAAEC,QAAS,oCACnCD,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,MAAME,EAAYC,eAAOC,GAAgC,IAAtBC,EAAWC,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAME,QAAiBR,EAAAA,EAAAA,IAAUI,EAAU,CAAEK,OAAQJ,IACrD,OAAOG,EAASE,IAClB,EAEaC,EAAaR,eAEXD,EADI,sBAaNU,EAAcT,eAEZD,EADC,eACmB,CAAEW,UAaxBC,EAAoBX,UAC/B,MAAMC,EAAQ,SAAAW,OAAYlC,GAC1B,aAAaqB,EAAUE,EAAS,EAYrBY,EAAYb,UACvB,MAAMC,EAAQ,SAAAW,OAAYlC,EAAO,YACjC,aAAaqB,EAAUE,EAAS,EAYrBjB,EAAcgB,UACzB,MAAMC,EAAQ,SAAAW,OAAYlC,EAAO,YACjC,aAAaqB,EAAUE,EAAS,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li``;\n\nexport const Author = styled.p``;\nexport const ReviewText = styled.p``;\n","import { useParams } from 'react-router-dom';\nimport { Author, Item } from './Reviews.styled';\nimport { useEffect, useState } from 'react';\nimport { fetchReview } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReview, setMovieReview] = useState([]);\n\n  useEffect(() => {\n    if (movieId) {\n      fetchReview(movieId).then(movies => {\n        if (movies.results && movies.results.length > 0) {\n          setMovieReview(movies.results);\n        }\n      });\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {movieReview.length > 0 ? (\n          movieReview.map(movie => (\n            <Item key={movie.id}>\n              <Author>Author: {movie.author}</Author>\n              <p>{movie.content}</p>\n            </Item>\n          ))\n        ) : (\n          <Item key=\"no-reviews\">There is no review yet </Item>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\naxios.defaults.params = { api_key: '4ee590f8afe314c87c8a374d8548e25b' };\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async (endpoint, queryParams = {}) => {\n  const response = await axios.get(endpoint, { params: queryParams });\n  return response.data;\n};\n\nexport const fetchTrend = async () => {\n  const endpoint = 'trending/movie/day';\n  return await getMovies(endpoint);\n};\n// export async function fetchTrend() {\n//   try {\n//     const result = await axios.get(\n//       `${BASE_URL}/trending/all/day?api_key=${api_key}&language=en-US`\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\nexport const fetchSearch = async query => {\n  const endpoint = `search/movie`;\n  return await getMovies(endpoint, { query });\n};\n\n// export async function fetchSearch(value) {\n//   try {\n//     const result = await axios.get(\n//       `${BASE_URL}/search/movie?query=${value}&include_adult=false&api_key=${api_key}&language=en-US&page=1`\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\nexport const fetchMovieDetails = async movieId => {\n  const endpoint = `movie/${movieId}`;\n  return await getMovies(endpoint);\n};\n// export async function fetchMovieDetails(id) {\n//   try {\n//     const result = await axios.get(\n//       `${BASE_URL}/movie/${id}?api_key=${api_key}&language=en-US`\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\nexport const fetchCast = async movieId => {\n  const endpoint = `movie/${movieId}/credits`;\n  return await getMovies(endpoint);\n};\n// export async function fetchCast(id) {\n//   try {\n//     const result = await axios.get(\n//       `${BASE_URL}/movie/${id}/credits?api_key=${api_key}&language=en-US`\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\nexport const fetchReview = async movieId => {\n  const endpoint = `movie/${movieId}/reviews`;\n  return await getMovies(endpoint);\n};\n// export async function fetchReview(id) {\n//   try {\n//     const result = await axios.get(\n//       `${BASE_URL}/movie/${id}/reviews?api_key=${api_key}&language=en-US&page=1`\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\n"],"names":["Item","styled","_templateObject","_taggedTemplateLiteral","Author","_templateObject2","_templateObject3","Reviews","movieId","useParams","movieReview","setMovieReview","useState","useEffect","fetchReview","then","movies","results","length","_jsx","children","map","movie","_jsxs","author","content","id","axios","api_key","getMovies","async","endpoint","queryParams","arguments","undefined","response","params","data","fetchTrend","fetchSearch","query","fetchMovieDetails","concat","fetchCast"],"sourceRoot":""}