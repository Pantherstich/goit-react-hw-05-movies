{"version":3,"file":"static/js/485.754fdf31.chunk.js","mappings":"6KAEO,MAAMA,EAAYC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wHAOrBC,EAAYH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4dAsBrBG,EAAWL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yI,8BC5BlC,MAiCA,EAjCmBK,IAAiB,IAAhB,OAAEC,GAAQD,EAC5B,MAAME,GAAWC,EAAAA,EAAAA,MAKjB,OACEC,EAAAA,EAAAA,KAACZ,EAAS,CAAAa,SACPJ,EAAOK,KAAIC,IAAU,IAADC,EACnB,MAAMC,EAAiB,QAAbD,EAAGD,EAAME,YAAI,IAAAD,EAAAA,EAAID,EAAMG,MAEjC,OACEC,EAAAA,EAAAA,MAACf,EAAS,CAAAS,SAAA,EACRD,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaP,EAAMQ,IAAqBC,MAAOd,EAASG,UAC9DD,EAAAA,EAAAA,KAAAa,EAAAA,SAAA,CAAAZ,SACGE,EAAMW,aACLd,EAAAA,EAAAA,KAACN,EAAQ,CACPqB,IAAG,GAAAL,OAfL,mCAeiBA,OAAGP,EAAMW,aACxBE,IAAI,WAdpB,0EAS8Cb,EAAMQ,IAY3CN,EAAM,MAbOF,EAAMQ,GAcV,KAGN,C,6DC9BT,MAAMM,E,OAAY5B,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yD,wCCGlC,MAiBA,EAjBa2B,KACX,MAAOrB,EAAQsB,IAAaC,EAAAA,EAAAA,UAAS,IASrC,OAPAC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,MAAaC,MAAK1B,IACZA,EAAO2B,QAAQC,OAAS,GAC1BN,EAAUtB,EAAO2B,QACnB,GACA,GACD,KAEDjB,EAAAA,EAAAA,MAAA,QAAAN,SAAA,EACED,EAAAA,EAAAA,KAACiB,EAAS,CAAAhB,SAAC,oBACXD,EAAAA,EAAAA,KAACZ,EAAAA,EAAS,CAACS,OAAQA,MACd,C,kFClBX,MAAM6B,EAAU,mCACVC,EAAW,+BAEVC,eAAeN,IACpB,IAIE,aAHqBO,EAAAA,EAAAA,IAAU,GAADnB,OACzBiB,EAAQ,8BAAAjB,OAA6BgB,EAAO,qBAEnCI,IAGhB,CAFE,MAAOC,GACP,MAAMA,CACR,CACF,CAEOH,eAAeI,EAAYC,GAChC,IAIE,aAHqBJ,EAAAA,EAAAA,IAAU,GAADnB,OACzBiB,EAAQ,wBAAAjB,OAAuBuB,EAAK,iCAAAvB,OAAgCgB,EAAO,4BAElEI,IAGhB,CAFE,MAAOC,GACP,MAAMA,CACR,CACF,CAEOH,eAAeM,EAAkBvB,GACtC,IAIE,aAHqBkB,EAAAA,EAAAA,IAAU,GAADnB,OACzBiB,EAAQ,WAAAjB,OAAUC,EAAE,aAAAD,OAAYgB,EAAO,qBAE9BI,IAGhB,CAFE,MAAOC,GACP,MAAMA,CACR,CACF,CAEOH,eAAeO,EAAUxB,GAC9B,IAIE,aAHqBkB,EAAAA,EAAAA,IAAU,GAADnB,OACzBiB,EAAQ,WAAAjB,OAAUC,EAAE,qBAAAD,OAAoBgB,EAAO,qBAEtCI,IAGhB,CAFE,MAAOC,GACP,MAAMA,CACR,CACF,CAEOH,eAAeQ,EAAYzB,GAChC,IAIE,aAHqBkB,EAAAA,EAAAA,IAAU,GAADnB,OACzBiB,EAAQ,WAAAjB,OAAUC,EAAE,qBAAAD,OAAoBgB,EAAO,4BAEtCI,IAGhB,CAFE,MAAOC,GACP,MAAMA,CACR,CACF,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  justify-self: center;\n  display: flex;\n  gap: 16px;\n  /* flex-direction: column; */\n  flex-wrap: wrap;\n`;\nexport const MovieItem = styled.li`\n  /* padding: 0; */\n  /* margin: 0px; */\n  border-radius: 16px;\n  padding: 4px;\n\n  list-style-type: none;\n  width: 15%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  /* padding: 8px; */\n  box-shadow: 0px 0px 8px 0px rgba(255, 255, 255, 0.85);\n\n  transition: transform 300ms ease-in-out;\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.85);\n    transform: scale(1.05);\n  }\n`;\nexport const MovieImg = styled.img`\n  padding: 0;\n  margin: 0;\n  width: 100%;\n  border-radius: 16px;\n  box-shadow: 0px 0px 8px 0px rgba(255, 255, 255, 0.85);\n`;\n","import { MovieList, MovieItem, MovieImg } from './MoviesList.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const baseUrl = 'https://image.tmdb.org/t/p/w300';\n  const defaultImg =\n    'https://cdn.pixabay.com/photo/2018/11/03/15/51/here-3792307_1280.png';\n\n  return (\n    <MovieList>\n      {movies.map(movie => {\n        const name = movie.name ?? movie.title;\n\n        return (\n          <MovieItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`} key={movie.id} state={location}>\n              <>\n                {movie.poster_path ? (\n                  <MovieImg\n                    src={`${baseUrl}${movie.poster_path}`}\n                    alt=\"poster\"\n                  />\n                ) : (\n                  defaultImg\n                )}\n              </>\n            </Link>\n            {name}{' '}\n          </MovieItem>\n        );\n      })}\n    </MovieList>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n`;\n","import { PageTitle } from './Home.styled';\nimport MovieList from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { fetchTrend } from 'services/api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrend().then(movies => {\n      if (movies.results.length > 0) {\n        setMovies(movies.results);\n      }\n    });\n  }, []);\n  return (\n    <main>\n      <PageTitle>Popular today:</PageTitle>\n      <MovieList movies={movies}></MovieList>\n    </main>\n  );\n};\nexport default Home;\n","import axios from 'axios';\nconst api_key = '4ee590f8afe314c87c8a374d8548e25b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrend() {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/trending/all/day?api_key=${api_key}&language=en-US`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchSearch(value) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/search/movie?query=${value}&include_adult=false&api_key=${api_key}&language=en-US&page=1`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${api_key}&language=en-US`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchCast(id) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${api_key}&language=en-US`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchReview(id) {\n  try {\n    const result = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${api_key}&language=en-US&page=1`\n    );\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["MovieList","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MovieImg","_templateObject3","_ref","movies","location","useLocation","_jsx","children","map","movie","_movie$name","name","title","_jsxs","Link","to","concat","id","state","_Fragment","poster_path","src","alt","PageTitle","Home","setMovies","useState","useEffect","fetchTrend","then","results","length","api_key","BASE_URL","async","axios","data","error","fetchSearch","value","fetchMovieDetails","fetchCast","fetchReview"],"sourceRoot":""}